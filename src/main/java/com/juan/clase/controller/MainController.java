package com.juan.clase.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.juan.clase.bean.RespuesBd;
import com.juan.clase.bean.User;
import com.juan.clase.repository.UserRepository;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/user") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@PostMapping(path = "/add") // Map ONLY POST Requests
	public @ResponseBody RespuesBd addNewUser(@RequestParam String name, @RequestParam(required = false) String email,
			String apellido, Long cedula) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		RespuesBd respuesta = new RespuesBd();
		if (email == null) {
			respuesta.setRespuesta("Error en agregar email");
			respuesta.setError("se necesita el mail");
			return respuesta;
		}
		User n = new User();
		n.setName(name);
		try {
			n.setEmail(email);
		} catch (Exception e1) {
			respuesta.setRespuesta("Error en agregar email");
			respuesta.setError(e1.getMessage());
			e1.printStackTrace();
			return respuesta;
			
		}
		n.setApellido(apellido);
		n.setCedula(cedula);

		try {
			userRepository.save(n);
			respuesta.setError("usuario Salvado");
		} catch (Exception e) {
			// TODO Auto-generated catch block
			respuesta.setRespuesta("Error en agregar usuario");
			respuesta.setError(e.getMessage());
		}
		return respuesta;

	}

	@GetMapping(path = "/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
}